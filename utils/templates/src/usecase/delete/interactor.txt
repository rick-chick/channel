from {model_lower}.usecase.input_port.{model_lower} import {model}{action}InputPort
from {model_lower}.usecase.repository.{model_lower} import {model}{action}Repository
from {model_lower}.usecase.models import (
    {model}{action}InDsDto,
    {model}{action}OutDto,
)
from {model_lower}.usecase.output_port.{model_lower} import {model}{action}OututPort

from {model_lower}.usecase.models import {model}{action}InDto
from {model_lower}.usecase.exception import (
    BusinessException, ValidationException, UnauthorizedException)

from pydantic import ValidationError


class {model}{action}Interactor({model}{action}InputPort):

    def __init__(
        self,
        gateway: {model}{action}Repository,
        presenter: {model}{action}OututPort
    ):
        self.gateway = gateway
        self.presenter = presenter

    def {action_lower}(
        self,
        {model_lower}_dto: {model}{action}InDto
    ) -> {model}{action}OutDto:

        try:
            if not {model_lower}_dto:
                return {model}{action}OutDto()

            session_user_ds_dto = self.gateway.load_session_user()
            if not session_user_ds_dto:
                raise UnauthorizedException

            {model_lower}_ds_in_dto = {model}{action}InDsDto(
                **{model_lower}_dto.model_dump())

            {model_lower}_ds_dtos = self.gateway.{action_lower}(
                {model_lower}_ds_in_dto
            )

            {action_lower}d_{model_lower}_ids = [
                {model_lower}.id for {model_lower} in {model_lower}_ds_dtos
                if {model_lower}.id is not None
            ]

            result = {model}{action}OutDto(
                ids={action_lower}d_{model_lower}_ids
            )

            self.presenter.prepare_success_view(result)

            return result

        except ValidationError as e:
            ex = ValidationException(e)
            self.presenter.prepare_fail_view(ex)
            raise ex

        except BusinessException as e:
            self.presenter.prepare_fail_view(e)
            raise e
