from {model_lower}.adapter.presenter.{model_lower}.{model_lower}_{action_lower}_presenter import (
    {model}{action}Presenter
)
from tests.{model_lower}.factories import {model}{action}OutDtoFactory
from tests.{model_lower}.adapter.presenter.{model_lower}.{model_lower}_{action_lower}_view_impl import (
    {model}{action}ViewImpl
)


def test_prepare_success_view():
    view = {model}{action}ViewImpl()
    target = {model}{action}Presenter(view)
    {model_lower} = {model}{action}OutDtoFactory.build()
    target.prepare_success_view({model_lower})

    assert view.{model_lower}_{action_lower}_out_dto == {model_lower}


def test_prepare_fail_view():
    view = {model}{action}ViewImpl()
    target = {model}{action}Presenter(view)
    target.prepare_fail_view(Exception())

    assert len(view.exceptions) > 0
